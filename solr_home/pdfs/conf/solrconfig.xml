<?xml version='1.0' encoding='UTF-8' ?>
<config>
	<luceneMatchVersion>4.10.3</luceneMatchVersion>

    <!-- Adding Solr Cell library and Apache Tike -->
    <!-- Match with the path.. 
         solr.install.dir: resolves to the current solr home i.e: ../solr_home/..
         ../ -> one step backward i.e:  ../solr-app/.. 
         ../ -> one step back i.e: ../solr-4.10./.. -->
    <lib dir="${solr.install.dir:../../..}/dist/" regex="solr-cell-\d.*\.jar" />
	<lib dir="${solr.install.dir:../../..}/contrib/extraction/lib/" regex=".*\.jar" />
    
	<codecFactory name="CodecFactory" class="solr.SchemaCodecFactory" />

	<!-- https://cwiki.apache.org/confluence/display/solr/DataDir+and+DirectoryFactory+in+SolrConfig -->
	<!-- https://www.packtpub.com/books/content/apache-solr-configuration
		 solr.MMapDirectoryFactory was the default directory factory for Solr for the 64-bit Linux systems from Solr 3.1 till 4.0. This directory implementation uses virtual memory and a kernel feature called mmap to access index files stored on disk. This allows Lucene (and thus Solr) to directly access the I/O cache. This is desirable and you should stick to that directory if near real-time searching is not needed. -->
	<directoryFactory name='DirectoryFactory' class='solr.MMapDirectoryFactory' />

	<!-- Issue#1 Index large pdf files. Currently this is not working -->
	<!-- Change "multipartUploadLimitInKB" property for changing the upload size.
	     Default is 2MB  -->
	<!-- <requestDispatcher handleSelect="false" >
	    <requestParsers enableRemoteStreaming="true" 
                        multipartUploadLimitInKB="2048000" />
    </requestDispatcher> -->
	
	<requestHandler name='standard' class='solr.StandardRequestHandler' default='true' />
	<requestHandler name="/update" class="solr.UpdateRequestHandler" />

	<!-- Make new RequestHandler for the pdf extraction with setting the input parameters.
	     This instucts Tika on how to emit metadata from the binary PDF file. -->
	<requestHandler name='/update/extract'
		            class="solr.extraction.ExtractingRequestHandler" >
		<!-- https://wiki.apache.org/solr/ExtractingRequestHandler -->
		<lst name='defaults'>
			<str name='lowernames'>true</str>
			<str name='overwrite'>true</str> <!-- Default is true. Indicates if the unique key constraints should be checked to overwrite previous versions of the same document -->
			<str name='literalsOverride'>true</str>
			<str name='update.chain'>check_duplication_document_entries</str>
			
			<!-- capture link hrefs -->
			<str name='captureAttr'>true</str>
			<str name='fmap.a'>link</str>
		</lst>
	</requestHandler>

    <!-- Read: https://cwiki.apache.org/confluence/display/solr/Update+Request+Processors
               https://wiki.apache.org/solr/UpdateRequestProcessor -->
	<!-- Idea: Find if a document has already been added.
	     "check_duplication_document_entries" is the name that is used for the process by
	     which redundant information or duplicated files can be found, so that we can delete the copies
	     and maintain an archive with only a single instance of every document. -->
	<updateRequestProcessorChain name='check_duplication_document_entries'>
		<!-- SignatureUpdateProcessorFactory: Uses a defined set of fields to generate a hash "signature" for the document. Useful for only indexing one copy of "similar" documents. -->
		<!-- https://cwiki.apache.org/confluence/display/solr/De-Duplication -->
		<processor class='org.apache.solr.update.processor.SignatureUpdateProcessorFactory'>
			<bool name='overwriteDupes'>false</bool>
			<str name='signatureField'>uid</str>
			<bool name='enabled'>true</bool>
			<str name='fields'>content</str>
			<str name='minTokenLen'>10</str>
			<str name='quantRate'>.2</str>
			<str name='signatureClass'>solr.update.processor.TextProfileSignature</str>
		</processor>
		<processor class='solr.LogUpdateProcessorFactory' />
		<processor class='solr.RunUpdateProcessorFactory' />
	</updateRequestProcessorChain>

	<requestHandler name='/admin/' class='org.apache.solr.handler.admin.AdminHandlers' />
	<admin>
		<defaultQuery>*:*</defaultQuery>
	</admin>

</config>