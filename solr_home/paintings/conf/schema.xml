<?xml version="1.0" encoding="UTF-8"?>

<schema name='dbpedia' version='1.1'>
	<types>
		<fieldType name="string" class="solr.StrField" />
		<fieldType name='long' class="solr.TrieLongField" />

		<fieldType name='text_general' class='solr.TextField' positionIncrementGap='100'>
			<analyzer>
				<!-- "MappingCharFilterFactory" -> Normalizes all the accented characters. It's important to provide
				      queries that are robust enough to find terms with digitization and without the right accents,
				      especially when dealing with foreign languages, so the normalization process replaces the accented
				      letter with the corresponding one without accent. -->
				<charFilter class='solr.MappingCharFilterFactory' mapping='mapping-ISOLatin1Accent.txt' />
				<!-- "StandardTokenizerFactory" -> It is designed for a wider general use case and is able to produce
				      tokens by splitting text using whitespaces and punctuation as delimiter, and it's able to recognize
				      (and not split) URL, email, and so on. -->
				<tokenizer class='solr.StandardTokenizerFactory' />
				<!-- "LowerCaseFilterFactory" -> Filters the TokenStream (as input from tokenizer or another filter definition) 
				      into lowercase (for handling terms ignoring cases). ex: In: "Happy, sad or funny", Tokenizer to Filter: "Happy", "sad", "or", "funny" Out: "happy", "sad", "or", "funny" -->
				<filter class='solr.LowerCaseFilterFactory' />
				<!-- Introducing StopFilter aka tokenization and Stopwords -->
				<!-- "StopFilterFactory" -> Token filter is designed to exclude some terms that are not interesting for a search
				      from the token list. The typical examples are articles such as the or offensive words.
				     "stopwords.txt" -> In order to intercept and ignore these terms (in StopFilterFactory), we can
					  define a list of these in an apposite text file called stopwords.txt, line by line.
					 "ignoreCase=true" -> It is possible to have more flexibility on terms defined in stopwords.txt.
					 "enablePositionIncrements=true" -> Used for ignoring certain terms, maintaining a trace of their position 
					  between other words. This is useful to perform queries such as "author of Mona Lisa". -->
				<filter class='solr.StopFilterFactory' ignoreCase='true' words="stopwords.txt"
					    enablePositionIncrements='true' />
			</analyzer>
		</fieldType>

		<fieldType name='url_text' class='solr.TextField'>
			<analyzer>
				<charFilter class='solr.MappingCharFilterFactory' mapping='mapping-ISOLatin1Accent.txt' />
				<!-- "WhitespaceTokenizerFactory" -> Simple tokenizer that splits the text stream on whitespace and returns 
				      sequences of non-whitespace characters as tokens.  -->
				<tokenizer class='solr.WhitespaceTokenizerFactory' />
				<!-- "WordDelimiterFilterFactory" -> This filter splits tokens at word delimiters. 
				     https://cwiki.apache.org/confluence/display/solr/Filter+Descriptions#FilterDescriptions-WordDelimiterFilter
					 https://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters#solr.WordDelimiterFilterFactory -->
				<filter class='solr.WordDelimiterFilterFactory' generateWordParts='1'
					                                            generateNumberParts='1'
					                                            catenateWords='0'
					                                            catenateNumbers='0'
					                                            catenateAll='0'
					                                            splitOnCaseChange='0'
					                                            preserveOriginal='0' />
               <filter class='solr.LowerCaseFilterFactory' />
			</analyzer>
		</fieldType>
	</types>

	<!-- https://wiki.apache.org/solr/FieldOptionsByUseCase -->
	<fields>
		<field name="artist" type="url_text" indexed="true" stored="true" multiValued="false" />
		<field name="title" type="text_general" indexed="true" stored="true" multiValued="false" />
        <field name="museum" type="url_text" indexed="true" stored="true" multiValued="false" />
        <field name="city" type="url_text" indexed="true" stored="true" multiValued="false" />
        <field name="year" type="string" indexed="true" stored="true" multiValued="false" />
        <field name="abstract" type="text_general" indexed="true" stored="true" multiValued="true" />
        <field name="wikipedia_link" type="url_text" indexed="true" stored="true" multiValued="false" />
		<field name="uri" type="string" indexed="true" stored="true" multiValued="false" required="true" />
		<field name="_version_" type="long" indexed="true" stored="true" multiValued="false" />

		<!-- Define Dynamic Fields -->
		<dynamicField name="*" type="string" multiValued="true" stored="true" indexed="true" />
		
		<!-- Define Copyfields and it's field name -->
		<field name="fullText" type="text_general" indexed="true" stored="false" multiValued="true" omitNorms="true" />
		<copyField source="*" dest="fullText" />
	</fields>

	<defaultSearchField>fullText</defaultSearchField>
	<solrQueryParser defaultOperator="OR" />
	<uniqueKey>uri</uniqueKey>

</schema>